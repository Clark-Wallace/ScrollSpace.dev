---
import fs from 'fs';
import path from 'path';
import yaml from 'js-yaml';
import { marked } from 'marked';
import Layout from '../../layouts/Layout.astro';
import ProjectPreviewCard from '../../components/ProjectPreviewCard.astro';

export async function getStaticPaths() {
  const zonesDir = path.join(process.cwd(), 'content/zones');
  const files = fs.readdirSync(zonesDir).filter(file => file.endsWith('.yaml'));
  
  return files.map(file => ({
    params: { zone: file.replace('.yaml', '') }
  }));
}

const { zone } = Astro.params;

// Read the zone YAML file
const zonePath = path.join(process.cwd(), 'content/zones', `${zone}.yaml`);
const zoneContent = fs.readFileSync(zonePath, 'utf-8');
const zoneData = yaml.load(zoneContent) as any;

// Get projects list from zone data
const projects = zoneData.projects || [];

// Read project details
const projectDetails = projects.map((projectSlug: string) => {
  try {
    const projectPath = path.join(process.cwd(), 'content/projects', `${projectSlug}.md`);
    const projectContent = fs.readFileSync(projectPath, 'utf-8');
    
    // Extract title from markdown (first H1 or use slug as fallback)
    const titleMatch = projectContent.match(/^#\s+(.+)$/m);
    const title = titleMatch ? titleMatch[1] : projectSlug;
    
    // Extract first paragraph for preview
    const paragraphs = projectContent.split('\n\n');
    let preview = '';
    for (const paragraph of paragraphs) {
      if (!paragraph.startsWith('#') && paragraph.trim().length > 0) {
        preview = paragraph.trim().replace(/\[([^\]]+)\]\([^)]+\)/g, '$1'); // Remove markdown links
        break;
      }
    }
    
    return {
      slug: projectSlug,
      title: title,
      preview: preview || 'No preview available.',
      exists: true
    };
  } catch (error) {
    return {
      slug: projectSlug,
      title: projectSlug,
      preview: '',
      exists: false
    };
  }
});
---

<Layout title={`ScrollSpace - ${zoneData.title}`} description={zoneData.description}>
  <!-- Navigation Bar -->
  <div id="nav-bar"></div>
  
  <main class="container mx-auto px-4 py-8 min-h-screen">
    <header class="mb-12 text-center">
      <h1 class="text-5xl font-bold text-gray-100 mb-4 font-mono tracking-wider">
        {zoneData.title.toUpperCase()}
      </h1>
      <p class="text-xl text-gray-300 mb-4 font-mono max-w-3xl mx-auto">
        > {zoneData.description}
      </p>
      {zoneData.tagline && (
        <p class="text-sm italic text-green-400 font-mono tracking-wide">
          {zoneData.tagline}
        </p>
      )}
    </header>

    <section>
      <h2 class="text-3xl font-semibold text-gray-200 mb-8 font-mono text-center">
        AVAILABLE_PROJECTS
      </h2>
      
      {projects.length > 0 ? (
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
          {projectDetails.map((project: any) => (
            <ProjectPreviewCard
              title={project.title}
              zone={zoneData.title}
              slug={project.slug}
              preview={project.preview}
              exists={project.exists}
            />
          ))}
        </div>
      ) : (
        <div class="text-center py-16">
          <p class="text-gray-400 font-mono text-lg">
            > No projects found in this zone yet.
          </p>
          <p class="text-gray-500 font-mono text-sm mt-2">
            The spirits whisper of future developments...
          </p>
        </div>
      )}
    </section>
    
    <!-- Zone-specific decorative elements -->
    <div class="absolute top-10 right-10 text-6xl opacity-20 animate-bounce" style="animation-duration: 4s;">
      ðŸ˜‚
    </div>
    <div class="absolute bottom-20 left-10 text-4xl opacity-10 animate-pulse">
      ðŸŽ­
    </div>
  </main>
</Layout>

<!-- Navigation Bar Component -->
<script>
  import React from 'react';
  import { createRoot } from 'react-dom/client';
  import NavigationBar from '../../components/NavigationBar.tsx';
  
  const navContainer = document.getElementById('nav-bar');
  if (navContainer) {
    const root = createRoot(navContainer);
    root.render(React.createElement(NavigationBar, {
      backUrl: '/park',
      backLabel: 'Back to Park'
    }));
  }
</script>