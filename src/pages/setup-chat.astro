---
import Layout from '../layouts/Layout.astro';
---

<Layout title="ScrollSpace - Chat Setup">
  <div class="min-h-screen bg-black text-green-400 p-6 font-mono">
    <div class="max-w-2xl mx-auto">
      <h1 class="text-2xl mb-6 text-center">ScrollSpace Chat Database Setup</h1>
      
      <div id="setup-status" class="mb-6 p-4 border border-green-400 bg-black/50">
        <div class="text-green-400">Ready to setup chat database...</div>
      </div>
      
      <div class="text-center space-y-4">
        <button 
          id="setup-btn" 
          class="bg-green-600 hover:bg-green-500 text-black px-6 py-3 font-bold cursor-pointer transition-all"
        >
          CREATE CHAT TABLE
        </button>
        
        <div class="text-sm text-green-400/60">
          This will create the necessary database table for real-time chat.
        </div>
      </div>
      
      <div class="mt-8 text-sm text-green-400/80">
        <h2 class="text-lg mb-4">Manual Setup (if automatic fails):</h2>
        <div class="bg-gray-900 p-4 border border-green-400/30 font-mono text-xs">
          <pre>-- Run this SQL in your Supabase SQL Editor:

CREATE TABLE simple_chat_messages (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  username TEXT NOT NULL,
  message TEXT NOT NULL,
  type TEXT DEFAULT 'message' CHECK (type IN ('message', 'join', 'leave', 'system')),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

ALTER TABLE simple_chat_messages ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow all operations on simple_chat_messages" 
ON simple_chat_messages FOR ALL USING (true) WITH CHECK (true);

CREATE INDEX idx_simple_chat_messages_created_at 
ON simple_chat_messages(created_at DESC);</pre>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const setupBtn = document.getElementById('setup-btn');
  const statusDiv = document.getElementById('setup-status');
  
  setupBtn?.addEventListener('click', async () => {
    setupBtn.disabled = true;
    setupBtn.textContent = 'CREATING...';
    statusDiv.innerHTML = '<div class="text-yellow-400">Setting up database table...</div>';
    
    try {
      const response = await fetch('/api/setup-simple-chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      const result = await response.json();
      
      if (response.ok) {
        statusDiv.innerHTML = `
          <div class="text-green-400">✅ Setup successful!</div>
          <div class="text-green-300 text-sm mt-2">Chat database is ready. You can now use the chat system.</div>
          <div class="mt-4">
            <a href="/chat" class="bg-green-600 hover:bg-green-500 text-black px-4 py-2 inline-block">
              GO TO CHAT
            </a>
          </div>
        `;
        setupBtn.textContent = 'SETUP COMPLETE';
      } else {
        statusDiv.innerHTML = `
          <div class="text-red-400">❌ Setup failed</div>
          <div class="text-red-300 text-sm mt-2">${result.error}</div>
          <div class="text-yellow-300 text-sm mt-2">Please try manual setup using the SQL below.</div>
        `;
        setupBtn.textContent = 'SETUP FAILED';
        setupBtn.disabled = false;
      }
    } catch (error) {
      statusDiv.innerHTML = `
        <div class="text-red-400">❌ Network error</div>
        <div class="text-red-300 text-sm mt-2">${error.message}</div>
      `;
      setupBtn.textContent = 'RETRY SETUP';
      setupBtn.disabled = false;
    }
  });
</script>

<style>
  body {
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
    min-height: 100vh;
  }
  
  button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
</style>