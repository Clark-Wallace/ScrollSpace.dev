---
import Layout from '../layouts/Layout.astro';
---

<Layout title="ScrollSpace - Auth Setup">
  <div class="min-h-screen bg-black text-green-400 p-6 font-mono">
    <div class="max-w-2xl mx-auto">
      <h1 class="text-2xl mb-6 text-center">ScrollSpace Authentication Database Setup</h1>
      
      <div id="setup-status" class="mb-6 p-4 border border-green-400 bg-black/50">
        <div class="text-green-400">Ready to setup authentication database...</div>
      </div>
      
      <div class="text-center space-y-4">
        <button 
          id="setup-btn" 
          class="bg-green-600 hover:bg-green-500 text-black px-6 py-3 font-bold cursor-pointer transition-all"
        >
          CREATE USER PROFILES TABLE
        </button>
        
        <div class="text-sm text-green-400/60">
          This will create the necessary database table for user authentication and profiles.
        </div>
      </div>
      
      <div class="mt-8 text-sm text-green-400/80">
        <h2 class="text-lg mb-4">Manual Setup (if automatic fails):</h2>
        <div class="bg-gray-900 p-4 border border-green-400/30 font-mono text-xs">
          <pre>-- Run this SQL in your Supabase SQL Editor:

-- Drop existing table and policies to start fresh
DROP TABLE IF EXISTS user_profiles CASCADE;

-- Create user profiles table
CREATE TABLE user_profiles (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE UNIQUE NOT NULL,
  username TEXT UNIQUE NOT NULL,
  display_name TEXT,
  avatar_url TEXT,
  bio TEXT,
  total_fragments INTEGER DEFAULT 0,
  rare_fragments INTEGER DEFAULT 0,
  joined_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  last_seen TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  is_online BOOLEAN DEFAULT false,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_user_profiles_user_id ON user_profiles(user_id);
CREATE INDEX IF NOT EXISTS idx_user_profiles_username ON user_profiles(username);
CREATE INDEX IF NOT EXISTS idx_user_profiles_is_online ON user_profiles(is_online);

-- Disable RLS for simplicity (like our chat table)
ALTER TABLE user_profiles DISABLE ROW LEVEL SECURITY;

-- Grant permissions to anonymous and authenticated users
GRANT ALL ON user_profiles TO authenticated, anon;

-- Enable realtime for this table
ALTER PUBLICATION supabase_realtime ADD TABLE user_profiles;</pre>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const setupBtn = document.getElementById('setup-btn');
  const statusDiv = document.getElementById('setup-status');
  
  setupBtn?.addEventListener('click', async () => {
    setupBtn.disabled = true;
    setupBtn.textContent = 'CREATING...';
    statusDiv.innerHTML = '<div class="text-yellow-400">Setting up user profiles table...</div>';
    
    try {
      const response = await fetch('/api/setup-user-profiles', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      const result = await response.json();
      
      if (response.ok) {
        statusDiv.innerHTML = `
          <div class="text-green-400">✅ Setup successful!</div>
          <div class="text-green-300 text-sm mt-2">User profiles database is ready. Authentication system enabled.</div>
          <div class="mt-4">
            <a href="/chat" class="bg-green-600 hover:bg-green-500 text-black px-4 py-2 inline-block">
              GO TO CHAT
            </a>
          </div>
        `;
        setupBtn.textContent = 'SETUP COMPLETE';
      } else {
        statusDiv.innerHTML = `
          <div class="text-red-400">❌ Setup failed</div>
          <div class="text-red-300 text-sm mt-2">${result.error}</div>
          <div class="text-yellow-300 text-sm mt-2">Please try manual setup using the SQL below.</div>
        `;
        setupBtn.textContent = 'SETUP FAILED';
        setupBtn.disabled = false;
      }
    } catch (error) {
      statusDiv.innerHTML = `
        <div class="text-red-400">❌ Network error</div>
        <div class="text-red-300 text-sm mt-2">${error.message}</div>
      `;
      setupBtn.textContent = 'RETRY SETUP';
      setupBtn.disabled = false;
    }
  });
</script>

<style>
  body {
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
    min-height: 100vh;
  }
  
  button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
</style>